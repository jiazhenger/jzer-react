"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkjzer_react_template"] = self["webpackChunkjzer_react_template"] || []).push([["src__pub_global_plugin_antd_form_upload_index_jsx"],{

/***/ "./src/_pub/global/plugin/antd/form/upload/index.jsx":
/*!***********************************************************!*\
  !*** ./src/_pub/global/plugin/antd/form/upload/index.jsx ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/upload/index.js\");\n/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/icons/LoadingOutlined.js\");\n/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/icons/PlusOutlined.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/_pub/global/plugin/antd/form/upload/utils.js\");\n\n\n/* -------------------------------------------------------- antd -- */\n\n\n/* -------------------------------------------------------- Utils -- */\n\n/* -------------------------------------------------------- Declare -- */\nconst {\n  $lazy,\n  $fn,\n  $config\n} = window;\n/* -------------------------------------------------------- Async Component -- */\nconst Button = $lazy.load(() => Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_ant-design_icons_es_icons_ClearOutlined_js-node_modules_ant-design_icons-b5ba03\"), __webpack_require__.e(\"src__pub_global_plugin_antd_button_jsx\")]).then(__webpack_require__.bind(__webpack_require__, /*! @antd/button */ \"./src/_pub/global/plugin/antd/button.jsx\")));\n/* -------------------------------------------------------- 回到顶部 -- */\nconst Index = ({\n  className,\n  /** @param {String}\t\t\t\t# 盒子 className */\n  name,\n  /** @param {String}\t\t\t\t# name */\n  label,\n  /** @param {String}\t\t\t\t# 标签名 */\n  children,\n  /** @param {Component}\t\t\t# slot */\n  fileName,\n  /** @param {Component}\t\t\t# 上传文件名 */\n  //\n  value,\n  /** @param {Number}\t\t\t\t# 值 */\n  disabled,\n  /** @param {Boolan}\t\t\t\t# 禁用 */\n  loading,\n  /** @param {Boolan}\t\t\t\t# 加载 */\n  // 获取值\n  onChange,\n  /** @param {Event}\t\t\t\t# 有 Form 时值改变时执行 */\n  onChanged,\n  /** @param {Event}\t\t\t\t# 值改变时执行 */\n  //\n  out,\n  /** @param {Number}\t\t\t\t# 在外部设置 value 值 */\n  fileType = 'img',\n  /** @param {String}\t\t\t\t# 上传文件类型 */\n  max = 20,\n  /** @param {String}\t\t\t\t# 最大文件大小 M */\n  mul,\n  /** @param {Boolan}\t\t\t\t# 是否多选 */\n  showUploadList = true,\n  /** @param {Boolan}\t\t\t\t# 是否显示进度条 */\n  //\n  api = 'upload',\n  /** @param {String}\t\t\t\t# 请求接口 api */\n  param,\n  /** @param {Object}\t\t\t\t# 上传参数 */\n  btnText = '上传文件',\n  /** @param {String}\t\t\t\t# 按钮名称 */\n  size,\n  /** @param {String}\t\t\t\t# 按钮尺寸 */\n  listType = 'picture-card',\n  /** @param {String}\t\t\t\t# 模式 */\n  // 自定义扩展\n  antd = {},\n  /** @param {Object}\t\t\t\t# antd */\n  btn = {}\n}, ref) => {\n  const [fileList, setFileList] = react__WEBPACK_IMPORTED_MODULE_1__.useState([]);\n  const [load, setLoad] = react__WEBPACK_IMPORTED_MODULE_1__.useState(loading);\n  const [img, setImg] = react__WEBPACK_IMPORTED_MODULE_1__.useState();\n  const isImg = listType === 'picture-card';\n\n  // const setFileListData = value => { if(showUploadList){ setFileList(value) } }\n  const setFileListData = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(value => setFileList(value), []);\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (mul) {\n      setFileListData(_utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getFileList(value));\n    } else {\n      setImg($fn.hasArray(value) ? value[0] : value);\n    }\n  }, [value]); // eslint-disable-line\n\n  const onUpload = ({\n    file,\n    fileList\n  }) => {\n    let {\n      status,\n      response\n    } = file;\n    if (status === 'uploading') {\n      // 正在上传\n      setFileList(fileList);\n      setLoad(true);\n    } else if (status === 'done') {\n      // 上传完成\n      let {\n        data,\n        msg,\n        code\n      } = response ?? {};\n      // 上传成功\n      if (code === 200) {\n        $fn.msg.success('上传成功');\n        if (fileType === 'img') {\n          let value = null;\n          setFileListData(d => {\n            let list = [];\n            // 多图上传\n            if (mul) {\n              data = _utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getFileList(data, file);\n              data = [...d, ...data].map((v, i) => ({\n                ...v,\n                uid: v.url\n              })); // 重新定义 uid\n              list = data.filter(v => v.url); // 将有 url 的数据过滤出来\n              value = list.map(v => v.url);\n            } else {\n              data = _utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getFileList(data);\n              list = isImg ? [] : data;\n              if ($fn.hasArray(data)) {\n                const {\n                  url\n                } = data[0];\n                value = url;\n              }\n            }\n            return list;\n          });\n          if (!mul) {\n            setImg(value);\n          }\n          const result = name ? {\n            model: {\n              [name]: value\n            }\n          } : null;\n          onChanged === null || onChanged === void 0 ? void 0 : onChanged({\n            value,\n            label,\n            name,\n            ...result\n          });\n          onChange === null || onChange === void 0 ? void 0 : onChange(value);\n        } else {\n          onChanged === null || onChanged === void 0 ? void 0 : onChanged(data);\n          onChange === null || onChange === void 0 ? void 0 : onChange(data);\n          setLoad(false);\n        }\n      } else if (code === $config.noLoginCode || code === $config.LoginExpireCode) {\n        $fn.msg.error(msg);\n        setTimeout(() => $fn.go('/login'), 200);\n      } else {\n        $fn.msg.error(msg ?? '文件上传失败');\n        setFileListData(v => v.filter(v => v.url));\n      }\n      setLoad(false);\n    } else if (status === 'removed') {// 上传移除\n    } else if (status === 'error') {\n      // 上传出错\n      $fn.msg.error(`${file.name} 文件上传失败!`);\n      setFileListData(v => v.filter(v => v.url));\n      setLoad(false);\n    }\n  };\n\n  // 上传之前判断\n  const onBeforeUpload = file => {\n    const delay = 5;\n    const type = _utils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getType(file.type);\n    if ($fn.hasArray(fileType)) {\n      let isOk = [];\n      let msg = '';\n      fileType.forEach((v, i) => {\n        msg += i === fileType.length - 1 ? type[v].msg : type[v].msg + '、';\n        if (type[v].bool) {\n          isOk.push(0);\n        }\n      });\n      if (isOk.length === 0) {\n        $fn.msg.warning(`仅允许上传${msg}!`, delay);\n      }\n      return isOk.length !== 0;\n    } else {\n      if (fileType === 'excel') {\n        const isOk = type.excel.bool;\n        if (!isOk) {\n          $fn.msg.warning(`仅允许上传${type.excel.msg}!`, delay);\n        }\n        return isOk;\n      } else if (fileType === 'img') {\n        const isOk = type.img.bool;\n        if (!isOk) {\n          $fn.msg.warning(`仅允许上传${type.img.msg}!`, delay);\n        }\n        const isLt2M = file.size / 1024 / 1024 < max;\n        if (!isLt2M) {\n          $fn.msg.warning(`图片必必须小于 20M!`, delay);\n        }\n        return isOk && isLt2M;\n      } else if (fileType === 'any') {\n        return true;\n      } else {\n        $fn.msg.warning(`未允许的上传文件类型`, delay);\n        return false;\n      }\n    }\n  };\n  const PlusComponent = () => loading ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    className: \"f30\"\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    className: \"f30\"\n  });\n\n  // React.useImperativeHandle( ref, () => ({\n\n  // }))\n  if (!mul && isImg) {\n    showUploadList = false;\n  }\n  if (!fileName) {\n    fileName = mul ? 'files[]' : 'file';\n  }\n  antd = {\n    className,\n    fileList,\n    name: fileName,\n    action: $config.api() + api,\n    listType,\n    multiple: mul,\n    data: param,\n    disabled: disabled || loading,\n    headers: {\n      Authorization: $fn.getToken()\n    },\n    beforeUpload: onBeforeUpload,\n    showUploadList,\n    onChange: onUpload,\n    onPreview: ({\n      url\n    }) => {\n      if (/\\.(gif|jpg|jpeg|png|GIF|JPEG|JPG|PNG)$/.test(url)) {\n        window.$imageModalRef().open({\n          src: url\n        });\n      } else {\n        window.open(url);\n      }\n    },\n    onRemove: file => {\n      let value;\n      setFileListData(v => {\n        const index = v.indexOf(file);\n        const list = v.slice();\n        list.splice(index, 1);\n        value = list.map(v => v.url);\n      });\n      if (!antd.multiple) {\n        value = null;\n      }\n      const result = name ? {\n        model: {\n          [name]: value\n        }\n      } : null;\n      onChanged === null || onChanged === void 0 ? void 0 : onChanged({\n        value,\n        label,\n        name,\n        ...result\n      });\n      onChange === null || onChange === void 0 ? void 0 : onChange(value);\n    },\n    ...antd\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(antd__WEBPACK_IMPORTED_MODULE_5__[\"default\"], antd, isImg ? antd.multiple ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(PlusComponent, null) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null, img ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"img\", {\n    src: img,\n    alt: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n    style: {\n      maxWidth: '100%',\n      display: 'inline-block'\n    }\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(PlusComponent, null), load && img && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"div\", {\n    className: \"abs_lt i10 fxmc\",\n    style: {\n      width: 104,\n      height: 104,\n      background: 'rgba(0,0,0,.2)'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    style: {\n      color: $config.mainColor,\n      fontSize: 30\n    }\n  }))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(Button, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n    stop: false,\n    loading: load,\n    disabled: disabled,\n    mode: \"upload\",\n    size: size\n  }, btn), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"span\", null, btnText)));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\n\n//# sourceURL=webpack://jzer-react-template/./src/_pub/global/plugin/antd/form/upload/index.jsx?");

/***/ }),

/***/ "./src/_pub/global/plugin/antd/form/upload/utils.js":
/*!**********************************************************!*\
  !*** ./src/_pub/global/plugin/antd/form/upload/utils.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nconst Index = {\n  getBase64: file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n  },\n  getType: f => ({\n    img: {\n      bool: f === 'image/jpeg' || f === 'image/png' || f === 'image/jpg',\n      msg: '图片文件'\n    },\n    pdf: {\n      bool: f === 'application/pdf',\n      msg: 'PDF 文件'\n    },\n    word: {\n      bool: f === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      msg: 'word 文件'\n    },\n    excel: {\n      bool: f === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || f === 'application/vnd.ms-excel',\n      msg: 'Excel 文件'\n    }\n  }),\n  getFileList: (value, file) => {\n    if (Array.isArray(value)) {\n      return value.map((v, i) => ({\n        uid: v,\n        name: (file === null || file === void 0 ? void 0 : file.name) ?? v,\n        status: 'done',\n        url: v\n      }));\n    } else if (value) {\n      return [{\n        uid: value,\n        status: 'done',\n        url: value,\n        name: (file === null || file === void 0 ? void 0 : file.name) ?? value\n      }];\n    } else {\n      return [];\n    }\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\n\n//# sourceURL=webpack://jzer-react-template/./src/_pub/global/plugin/antd/form/upload/utils.js?");

/***/ })

}]);