import e from"../../_node/@babel/runtime/helpers/esm/asyncToGenerator.js";import n from"../../_node/@babel/runtime/regenerator/index.js";var t="db",o=function(){var e=window.indexedDB.open(t,1);return new Promise((function(n,o){e.onsuccess=function(o){var r=o.target.result.transaction(t,"readwrite").objectStore(t);n(r),e=null},e.onerror=function(e){console.log("db数据库使用失败："+e.srcElement.error.message),o(e.message)},e.onupgradeneeded=function(e){var n=e.target.result;n.objectStoreNames.contains(t)||n.createObjectStore(t),console.log("db 表创建成功")}}))},r={set:function(e,n){return o().then((function(t){try{var o=t.get(e);return o.onsuccess=function(o){t.put(n,e)},o.onerror=function(e){console.log("存储数据到 indexdb 失败")},!0}catch(e){return!1}}))},get:function(e){return new Promise((function(n,t){o().then((function(t){try{var o=t.get(e);o.onsuccess=function(e){n(e.target.result)},o.onerror=function(e){console.log("获取 indexdb 数据失败")}}catch(e){n(null)}}))}))},remove:function(e){o().then((function(n){var t=n.delete(e);t.onsuccess=function(e){console.log("删除 indexdb 数据成功")},t.onerror=function(e){console.log("删除 indexdb 数据失败")}}))},clear:function(){return e(n.mark((function e(){return n.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!window.indexedDB.databases){e.next=7;break}return e.next=3,window.indexedDB.databases();case 3:e.sent.length>0&&window.indexedDB.deleteDatabase(t),e.next=8;break;case 7:window.indexedDB.deleteDatabase(t);case 8:case"end":return e.stop()}}),e)})))()}};export{r as default};
